## 
# federc/helper.fd
# created by Fionn Langhans <fionn.langhans@gmail.com>
#-------------------------------------------------------------------------------
# Copyright (c) 2018 Fionn Langhans
#
# This software is provided 'as-is', without any express or implied warranty. In
# no event will the authors be held liable for any damages arising from the use
# of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it freely,
# subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software in a
#    product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
#
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
#
# 3. This notice may not be removed or altered from any source distribution.
#-------------------------------------------------------------------------------
##
include "stdio.fd"
namespace compiler
  namespace help
    func err(String operation)
      io.err.println("Help:")
      io.err.print("    federc help ")
      io.err.print(operation)
      io.err.println()
    ;

    func err
      err("")
    ;

    func err_unknown_option(String op, String arg)
      io.err.print("Unknown option: ")
      io.err.println(arg)
      err(op)
    ;

    func _printOperation(String opName)
      io.print("    ")
      io.print(opName)
      length = 10 - opName.length()
      for length > 0
        io.print(' ')
        length --
      ;
    ;

    func _printOption(String opName)
      io.print("    ")
      io.print(opName)
      length = 20 - opName.length()
      for length > 0
        io.print(' ')
        length --
      ;
    ;

    func general
      io.println("federc: A Feder compiler & a bit more")
      io.println()
      io.println("Usage:")
      io.println("    federc [operation] [arguments]")
      io.println("[operation]s are:")
      _printOperation("compile")
      io.println("Compile Feder source code")
      _printOperation("style")
      io.println("Reformat source code to apply to Feder's standards")
      _printOperation("version")
      io.println("Prints the current version of the program")
      _printOperation("license")
      io.println("Prints the license of this program")
      io.println(
        "Issue 'federc help [operation]' for more help about an operation")
    ;

    func compile
      io.println("Usage:")
      io.println("    federc compile [options] [files]")
      io.println("[options]:")
      _printOption("-output-dir [dir]")
      io.println("Write output in the directory 'dir'")
      _printOption("  -d [dir]")
      io.println("Default: \"./build\"")
      io.println()
    ;

    func style
      io.println("Usage:")
      io.println("    federc style [options] [files]")
      io.println("[options]")
      _printOption("-suffix [ext]")
      io.println("Use [ext] as extention for the new files")
      _printOption("")
      io.println("Default: \"\"")
      io.println()
      _printOption("-tab")
      io.println("Use a different \"tab\"")
      _printOption("")
      io.println("Default: 4 spaces")
      io.println()
      _printOption("-stdout")
      io.println("Write to stdout instead to file+suffix")
    ;

    func license
      io.println("Prints a zlib-license")
    ;
  ;
;
